# goto DES_CUTOUTS_2_SCALES
goto DES_CUTOUTS_2_PARAMETERS
# ============================================================================
# 2012-12-19 (Wednesday) 18:21 PST

# Experimenting with optimizing scales, Q and alpha.
# Choose one set of scales.

# Loop over 5x5 grid of Q, alpha:

mkdir -p tests/Q-alpha
set pngfiles = ()
set scales = "0.9,1.3,2.0"

foreach Q ( 0.01 0.10 1.00 10.0 100. )
  foreach alpha ( 0.01 0.03 0.10 0.30 1.00 )

    set pars = "${Q},${alpha}"

    set Qs = `echo $Q | sed s/'\.'/'p'/g`
    set as = `echo $alpha | sed s/'\.'/'p'/g`
    set pngfile = "tests/Q-alpha/Q${Qs}_alpha${as}.png"
    set logfile = $pngfile:r.log

    ./compose.py -v -l -x white -p $pars -s $scales \
        -o $pngfile \
        examples/CFHTLS_27_i_sci.fits \
        examples/CFHTLS_27_r_sci.fits \
        examples/CFHTLS_27_g_sci.fits > $logfile

    du -sch $pngfile

    set pngfiles = ( $pngfiles $pngfile)

  end
end

gallery.pl -t -x 5 -y 5 -pdf $pngfiles \
  -o tests/Q-alpha/CFHTLS_27_Q-alpha_gallery.pdf

# Q doesn't make a great deal of difference, not as much as alpha. It does
# change visibility of arc though.
# Set to 1.0 for now.

# Now compare saturate to white, with color sat:

mkdir -p tests/saturation
set pngfiles = ()
set scales = "0.9,1.3,2.0"
set Q = 1.0

foreach saturation ( white color )
  foreach alpha ( 0.01 0.03 0.10 0.30 1.00 )

    set pars = "${Q},${alpha}"

    set as = `echo $alpha | sed s/'\.'/'p'/g`
    set pngfile = "tests/saturation/${saturation}_alpha${as}.png"
    set logfile = $pngfile:r.log

    ./compose.py -v -l -x $saturation -p $pars -s $scales \
        -o $pngfile \
        examples/CFHTLS_27_i_sci.fits \
        examples/CFHTLS_27_r_sci.fits \
        examples/CFHTLS_27_g_sci.fits > $logfile

    du -sch $pngfile

    set pngfiles = ( $pngfiles $pngfile)

  end
end

gallery.pl -t -x 5 -y 2 -pdf $pngfiles \
  -o tests/saturation/CFHTLS_27_saturation_gallery.pdf

# OK, saturate to color is more informative, but are central red points
# distracting? Might be better to choose white.

# Loop over 5x5 grid of Q, alpha:

mkdir -p tests/offset-alpha
set pngfiles = ()
set scales = "0.9,1.3,2.0"
set Q = 1.0
set saturation = "white"

foreach offset ( -0.2 -0.1 0.0 0.1 0.2 )
  foreach alpha ( 0.01 0.03 0.10 0.30 1.00 )

    set pars = "${Q},${alpha}"

    set os = `echo $offset | sed s/'\.'/'p'/g`
    set as = `echo $alpha | sed s/'\.'/'p'/g`
    set pngfile = "tests/offset-alpha/off${os}_alpha${as}.png"
    set logfile = $pngfile:r.log

    ./compose.py -v -l -x $saturation -z $offset -p $pars -s $scales \
        -o $pngfile \
        examples/CFHTLS_27_i_sci.fits \
        examples/CFHTLS_27_r_sci.fits \
        examples/CFHTLS_27_g_sci.fits > $logfile

    du -sch $pngfile

    set pngfiles = ( $pngfiles $pngfile)

  end
end

gallery.pl -t -x 5 -y 5 -pdf $pngfiles \
  -o tests/offset-alpha/CFHTLS_27_offset-alpha_gallery.pdf

# OK, zero maybe looks nicest...

# Now test color scales!

mkdir -p tests/scales
set pngfiles = ()
set Q = 1.0
set alpha = 0.03
set pars = "${Q},${alpha}"
set offset = 0.0
set saturation = "white"

set gscale = "1.0"

foreach rscale ( 0.6 0.8 1.0 1.2 1.4 )
  foreach bscale ( 0.6 0.8 1.0 1.2 1.4 )

    set scales = "$rscale,$gscale,$bscale"
    set ss = `echo $scales | sed s/'\.'/'p'/g | sed s/'\,'/'x'/g`
    set pngfile = "tests/scales/scales${ss}.png"
    set logfile = $pngfile:r.log

    ./compose.py -v -l -x $saturation -z $offset -p $pars -s $scales \
        -o $pngfile \
        examples/CFHTLS_27_i_sci.fits \
        examples/CFHTLS_27_r_sci.fits \
        examples/CFHTLS_27_g_sci.fits > $logfile

    du -sch $pngfile

    set pngfiles = ( $pngfiles $pngfile)

  end
end

gallery.pl -t -x 5 -y 5 -pdf $pngfiles \
  -o tests/scales/CFHTLS_27_scales_gallery.pdf

# How much value is there in being able to change the r and b scale? Not too
# much... 0.8,1.0,1.0 works well

# Scales normalized to: 0.857142857143 1.07142857143 1.07142857143

# OK: current standard setup (optimized for example
#   CFHTLS data from Anupreeta More):
#
# set Q = 1.0
# set alpha = 0.03
# set scales = 0.8,1.0,1.0
# set offset = 0.0
# set saturation = white

# ============================================================================
# 2015-03-04 (Wednesday) 13:15 PST

# Setting scales for DES images. 34 test images from Y1 dataset, des_cutouts_2
# Try varying scales, and parameters, and see if sample is uniform.


DES_CUTOUTS_2_SCALES:

set DES_DATA_DIR = /Users/pjm/public_html/SpaceWarps/DES/des_cutouts_2

cd $DES_DATA_DIR

set stems = `ls *i.fits | cut -c1-17 | sort | uniq`

set pngfiles = ()
set Q = 1.0
set alpha = 0.03
set pars = "${Q},${alpha}"
set offset = 0.0
set saturation = "white"

mkdir -p tests/scales

foreach stem ( $stems )

    set rfile = ${stem}_i.fits
    set gfile = ${stem}_r.fits
    set bfile = ${stem}_g.fits

    set rscale = "1.0"
    foreach gscale ( 1.0 1.2 1.4 )
      foreach bscale ( 2.4 2.8 3.2 )

        set scales = "$rscale,$gscale,$bscale"
        set ss = `echo $scales | sed s/'\.'/'p'/g | sed s/'\,'/'x'/g`
        set pngfile = "tests/scales/${stem}_${ss}_gri.png"
        set logfile = $pngfile:r.log

        compose.py -v -x $saturation -z $offset -p $pars -s $scales \
           -o $pngfile  $rfile $gfile $bfile  > $logfile

        du -h $pngfile

        set pngfiles = ( $pngfiles $pngfile)

      end
    end

end

gallery.pl -t -x 3 -y 3 -pdf $pngfiles \
  -o tests/scales/des_cutouts_2_scales_gallery.pdf

du -h tests/scales/des_cutouts_2_scales_gallery.pdf

goto FINISH

# OK, looks like a good default for the DES scales is
#    compose.py -v -s 1.0,1.2,2.8 -z 0.0 -p 1.0,0.03 -m -1.0


DES_CUTOUTS_2_PARAMETERS:

set DES_DATA_DIR = /Users/pjm/public_html/SpaceWarps/DES/des_cutouts_2

cd $DES_DATA_DIR

set stems = `ls *i.fits | cut -c1-17 | sort | uniq`

set pngfiles = ()

set pars = "${Q},${alpha}"
set scales = "1.0,1.2,2.8"
set offset = 0.0
set saturation = "white"

mkdir -p tests/parameters

foreach stem ( $stems )

    set rfile = ${stem}_i.fits
    set gfile = ${stem}_r.fits
    set bfile = ${stem}_g.fits

    set rscale = "1.0"
    foreach Q ( 0.5 1.0 2.0 )
      foreach alpha ( 0.025 0.030 0.035 )

        set pars = "$Q,$alpha"
        set pp = `echo $pars | sed s/'\.'/'p'/g | sed s/'\,'/'x'/g`
        set pngfile = "tests/parameters/${stem}_${pp}_gri.png"
        set logfile = $pngfile:r.log

        compose.py -v -x $saturation -z $offset -p $pars -s $scales \
           -o $pngfile  $rfile $gfile $bfile  > $logfile

        du -h $pngfile

        set pngfiles = ( $pngfiles $pngfile)

      end
    end

end

gallery.pl -t -x 3 -y 3 -pdf $pngfiles \
  -o tests/parameters/des_cutouts_2_parameters_gallery.pdf

du -h tests/parameters/des_cutouts_2_parameters_gallery.pdf

goto FINISH

# OK, Q=1.0 and alpha=0.03 are not bad defaults - and these cutouts seem
# pretty uniform in quality, actually. What we need is to pick out the
# blue arcs better - do we need sims for that? Or stronger blue?


# ============================================================================
FINISH:
